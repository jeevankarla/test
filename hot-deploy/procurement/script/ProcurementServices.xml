<?xml version="1.0" encoding="UTF-8"?>
<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->

<simple-methods xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="http://ofbiz.apache.org/dtds/simple-methods.xsd">
        
   <simple-method method-name="deleteProcurementEntry" short-description="Delete Procurement Entry">        
        <entity-one entity-name="OrderItem" value-field="lookedUpValue"/>
        <if-compare operator="equals" value="ITEM_APPROVED" field="lookedUpValue.statusId">
        	<add-error>
        		<fail-message message="you can not delete entry, once  billing is generated."/>
        	</add-error>
        	<check-errors/>
        </if-compare> 
      <remove-value value-field="lookedUpValue"/>
        <field-to-result field="lookedUpValue.orderId" result-name="orderId"></field-to-result>
        <return response-code="entry deleted, quantity '${lookedUpValue.quantity}'"/>
    </simple-method>
    
	 <simple-method method-name="checkDeleteProcValidationEntry" short-description="Delete Procurement validation Entry">      
        <entity-and list="validationEntries" entity-name="ProcBillingValidation">
        	<field-map field-name="orderId" from-field="parameters.orderId"/>
        	<field-map field-name="orderItemSeqId" from-field="parameters.orderItemSeqId"/>
        </entity-and>
        <if-not-empty field="validationEntries">
        	<remove-list list="validationEntries"/>       	
        </if-not-empty>
        <return response-code="entry deleted"/>
    </simple-method>
        
	<simple-method method-name="createProcurementProducerMigr" short-description="Create Producer Migration Record">
        <make-value entity-name="ProcProducerMigration" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <!-- ProcProducerMigration uses a sequenced id, so get the next one now and set it... -->
        <if-empty field="parameters.recordId">
            <sequenced-id sequence-name="ProcProducerMigration" field="newEntity.recordId"/>
        <else>
            <set-pk-fields map="parameters" value-field="newEntity"/>
        </else>
        </if-empty>
        <now-timestamp field="nowTimestamp"/>
        <set-current-user-login value-field="userLogin"/>
        <set field="newEntity.createdDate" from-field="nowTimestamp" type="Timestamp"/>
        <set field="newEntity.lastModifiedDate" from-field="nowTimestamp" type="Timestamp"/>
        <set field="newEntity.createdByUserLogin" from-field="userLogin.userLoginId" type="String"/>
        <set field="newEntity.lastModifiedByUserLogin" from-field="userLogin.userLoginId" type="String"/>
        <field-to-result field="newEntity.recordId" result-name="recordId"/>
        <create-value value-field="newEntity"/>
    </simple-method>
    
	 <simple-method method-name="updateProcurementProducerMigr" short-description="Update an Producer Migration Record">
        <make-value entity-name="ProcProducerMigration" value-field="lookupPKMap"/>
        <set-pk-fields map="parameters" value-field="lookupPKMap"/>
        <find-by-primary-key map="lookupPKMap" value-field="lookedUpValue"/>
        <set-nonpk-fields map="parameters" value-field="lookedUpValue"/>
       	<now-timestamp field="nowTimestamp"/>
        <set-current-user-login value-field="userLogin"/>
        <set field="lookedUpValue.lastModifiedDate" from-field="nowTimestamp" type="Timestamp"/>
        <set field="lookedUpValue.lastModifiedByUserLogin" from-field="userLogin.userLoginId" type="String"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>
    <simple-method method-name="deleteProcurementProducerMigr" short-description="Delete an Producer Migration Record">
        <make-value entity-name="ProcProducerMigration" value-field="lookupPKMap"/>
        <set-pk-fields map="parameters" value-field="lookupPKMap"/>
        <find-by-primary-key map="lookupPKMap" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>
    <simple-method method-name="deleteProFacilityOutputEntry" short-description="Delete an Facility Output Entry">
       	<set field="checkProcPeriodBillingInMap.customTimePeriodId" from-field="parameters.customTimePeriodId"/>
       	<set field="checkProcPeriodBillingInMap.userLogin" from-field="parameters.userLogin"/>
 		<call-service service-name="checkProcPeriodBilling" in-map-name="checkProcPeriodBillingInMap">
 			<result-to-field  result-name="checkPeriodBillingResult" field="checkPeriodBillingResult"/>
 		</call-service>
 		<check-errors />
	    <make-value entity-name="ProcFacilityOutput" value-field="lookedUpValue"/>
        <set-pk-fields value-field="lookedUpValue" map="parameters"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>
</simple-methods>
