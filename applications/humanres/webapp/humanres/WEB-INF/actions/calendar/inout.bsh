/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

import org.ofbiz.entity.*;
import org.ofbiz.base.util.*;
import org.ofbiz.entity.condition.*;
import java.util.*;
import java.lang.*;
import org.ofbiz.base.util.*;
import org.ofbiz.base.util.UtilMisc;
import javolution.util.FastMap;
import org.ofbiz.entity.util.EntityFindOptions;
//partyId = parameters.get("partyId");
//delegator=request.getAttribute("delegator");
//EmployeeId = parameters.get("EmployeeId");
partyId = context.get("partyId");
punchdate=context.get("punchdate");
if (parameters.get("partyId") != null) 
//if (EmployeeId == null) 
{
userLogin = request.getAttribute("userLogin");

condition = new EntityExpr("partyId", EntityOperator.EQUALS, userLogin.getString("partyId"));
data=delegator.findByCondition("EmplPunch" , condition, null, null);

}
else 

{

condition = new EntityExpr("partyId", EntityOperator.EQUALS, partyId);
data=delegator.findByCondition("EmplPunch" , condition, null, null);

}




context.put("data",data);


